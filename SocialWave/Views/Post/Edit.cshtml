@using SocialWave.Models.AbstractClasses;
@using SocialWave.Models.ConcreteClasses;
@using SocialWave.Extensions;
@model Post;

<h2 class="info-text text-center">Edit Post</h2>
<div class="custom-border"></div>

@if (Model is PostWithoutImage)
{
    <div class="post" style="margin-bottom: 80px;">
        <div class="post-header">
            @if (Model.User.PictureProfile == null)
            {
                <div class="text-xxl-start">
                    <form asp-action="UserPageWithParams" asp-controller="User" method="get">
                        <input type="hidden" name="name" value="@Model.User.Name" />
                        <button type="submit" class="btn text-dark"><i class="bi bi-person-circle me-2"></i>@Model.User.Name.CutName()</button>
                    </form>
                </div>
            }
            else
            {
                <form asp-action="UserPageWithParams" asp-controller="User" method="get">
                    <input type="hidden" name="name" value="@Model.User.Name" />
                    <button class="btn text-dark"><img src="data:image/png;base64,@(Convert.ToBase64String(Model.User.PictureProfile))" class="img-fluid rounded-circle me-2" style="width: 40px; height: 40px; object-fit: cover;" /> @Model.User.Name.CutName()</button>
                </form>
            }
            <div style="margin-right: 20px">
                <p>@Model.Date.Duration()</p>
            </div>
        </div>
        <div class="post-content text-xxl-center">
            <div class="mb-3">
                <form id="editForm" asp-action="Edit" asp-controller="Post" onsubmit="return false;">
                    <label asp-for="Description" class="form-label">Описание:</label>
                    <input type="hidden" name="postId" value="@Model.Id" />
                    <textarea id="descriptionInput" class="form-control bg-light text-dark text-center" rows="5" asp-for="Description"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </form>
            </div>
       
            <div class="d-flex justify-content-between mb-3">
                <button class="btn btn-outline-primary toggle-comments" data-post-id="@Model.Id"><i class="bi bi-chat-left-text"></i></button>
                <div class="d-flex flex-column">
                    @if (Model.Likes != null && Model.Likes.Any(l => l.User.Name == User.Identity.Name))
                    {
                        <form method="post" asp-action="Dislike" asp-route-id="@Model.Id" asp-controller="Post" class="me-3">
                            <button class="text-xxl-end btn btn-like" type="submit"><i class="bi bi-heart-fill text-danger"></i> <span class="m-0 text-danger">@Model.Likes.CountLikes()</span></button>
                        </form>
                    }
                    else
                    {
                        <form method="post" asp-action="Like" asp-route-id="@Model.Id" asp-controller="Post" class="me-3">
                            <button type="submit" class="btn btn-like"><i class="bi bi-heart text-danger"></i> <span class="m-0 text-danger">@Model.Likes.CountLikes()</span></button>
                        </form>
                    }
                </div>
              
            </div>
            <div class="text-xxl">
                <div class="post-comments" data-post-id="@Model.Id" style="display: none;">
                    <div class="comment">
                        <div class="custom-border"></div>
                        <p class="text-center text-primary">Комментарии</p>
                        <div class="custom-border"></div>
                     
                        @if (Model.Comments == null || !Model.Comments.Any())
                        {
                            <h6 class="text-center">Нет комментариев под постом</h6>
                        }
                        else
                        {
                            <div class="text-center">
                                @foreach (var comment in Model.Comments)
                                {
                                    <div class="comment-container d-flex align-items-center mb-3">
                                        <div class="comment-details">
                                            @if (comment.User.PictureProfile == null)
                                            {
                                                <h9 class="text-primary d-inline-block"><i class="bi bi-person-circle mx-2 text-primary"></i>@comment.User.Name.CutName()</h9>
                                                <p class="d-inline-block mx-2">@comment.Text.CutComment()</p>
                                            }
                                            else
                                            {
                                                <form asp-action="UserPageWithParams" asp-controller="User" method="get">
                                                    <input type="hidden" name="name" value="@Model.User.Name" />
                                                    <button class="btn text-dark"><img src="data:image/png;base64,@(Convert.ToBase64String(comment.User.PictureProfile))" class="img-fluid rounded-circle me-2" style="width: 40px; height: 40px; object-fit: cover;" /> @Model.User.Name.CutName():</button>
                                                    <p class="d-inline-block mx-2">@comment.Text.CutComment()</p>
                                                </form>
                                            }
                                        </div>
                                        <div class="comment-like ms-auto">
                                            @if (comment.Likes != null && comment.Likes.Count() != 0 && Model.Likes.Any(l => l.User.Name == User.Identity.Name))
                                            {
                                                <form method="post" asp-action="DislikeComment" asp-route-id="@comment.Id" asp-controller="Post">
                                                    <button type="submit" class="btn btn-like-comment"><i class="bi bi-heart-fill text-danger"></i> <span class="m-0 text-danger">@comment.Likes.CountLikes()</span></button>
                                                </form>
                                            }
                                            else
                                            {
                                                <form method="post" asp-action="LikeComment" asp-route-id="@comment.Id" asp-controller="Post">
                                                    <button type="submit" class="btn btn-like-comment"><i class="bi bi-heart text-danger"></i> <span class="m-0 text-danger">@comment.Likes.CountLikes()</span></button>
                                                </form>
                                            }
                                        </div>
                                       
                                    </div>
                                    <hr />
                                }
                            </div>
                        }
                        <a class="btn btn-outline-primary text-xl-center mb-3" asp-route-id="@Model.Id" asp-action="CreateComment" asp-controller="Post"><i class="bi bi-chat-left text-primary"></i>Оставить комментарий</a>
                    </div>
                    <form class="add-comment-form" style="display: none;">
                        <input type="text" class="form-control mb-3" placeholder="Добавить комментарий..." />
                        <button type="submit" class="btn btn-primary">Добавить</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="text-center">
        <form method="post" asp-action="DeletePost" asp-controller="Post" asp-route-id="@Model.Id">
            <button class="btn text-danger">Удалить пост <i class="bi bi-trash-fill"></i> </button>
        </form>
    </div>
}
else
{
    PostWithImage postImage = Model as PostWithImage;
    <div class="post" style="margin-bottom: 80px;">
        <div class="post-header">
            @if (postImage.User.PictureProfile == null)
            {
                <div class="text-xxl-start">
                    <form asp-action="UserPageWithParams" asp-controller="User" method="get">
                        <input type="hidden" name="name" value="@postImage.User.Name" />
                        <button type="submit" class="btn text-dark"><i class="bi bi-person-circle me-2"></i>@postImage.User.Name.CutName()</button>
                    </form>
                </div>
            }
            else
            {
                <form asp-action="UserPageWithParams" asp-controller="User" method="get">
                    <input type="hidden" name="name" value="@Model.User.Name" />
                    <button class="btn text-dark"><img src="data:image/png;base64,@(Convert.ToBase64String(postImage.User.PictureProfile))" class="img-fluid rounded-circle me-2" style="width: 40px; height: 40px; object-fit: cover;" /> @Model.User.Name.CutName()</button>
                </form>
            }
            <div class="post-meta" style="margin-right: 20px">
                <p>@postImage.Date.Duration()</p>
            </div>
        </div>
        <div class="post-content text-xxl-center">
            <div class="mb-3">
                <form id="editForm" asp-action="Edit" asp-controller="Post" onsubmit="return false;">
                    <label asp-for="Description" class="form-label">Описание:</label>
                    <input type="hidden" name="postId" value="@Model.Id" />
                    <textarea id="descriptionInput" class="form-control bg-light text-dark text-center" rows="5" asp-for="Description"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </form>
            </div>
            <div class="post-content text-xxl-center">
                <img src="data:image/png;base64,@(Convert.ToBase64String(postImage.Image))" class="img-fluid" style="max-width: 70%; height: auto;" />
            </div>
            <div class="d-flex justify-content-between mb-3" style="margin-top: 20px;">
                <button class="btn btn-outline-primary toggle-comments" data-post-id="@postImage.Id"><i class="bi bi-chat-left-text"></i></button>
                <div class="d-flex flex-column">
                    @if (postImage.Likes != null && postImage.Likes.Any(l => l.User.Name == User.Identity.Name))
                    {
                        <form method="post" asp-action="Dislike" asp-route-id="@postImage.Id" asp-controller="Post" class="me-3">
                            <button class="text-xxl-end btn btn-like" type="submit"><i class="bi bi-heart-fill text-danger"></i> <span class="m-0 text-danger">@postImage.Likes.CountLikes()</span></button>
                        </form>
                    }
                    else
                    {
                        <form method="post" asp-action="Like" asp-route-id="@postImage.Id" asp-controller="Post" class="me-3">
                            <button type="submit" class="btn btn-like"><i class="bi bi-heart text-danger"></i> <span class="m-0 text-danger">@postImage.Likes.CountLikes()</span></button>
                        </form>
                    }
                </div>
            </div>
            <div class="text-xxl">
                <div class="post-comments" data-post-id="@postImage.Id" style="display: none;">
                    <div class="comment">
                        <div class="custom-border"></div>
                        <p class="text-center text-primary">Comments</p>
                        <div class="custom-border"></div>
                        @if (postImage.Comments == null || !postImage.Comments.Any())
                        {
                            <h6 class="text-center">No exist comments in this post</h6>
                        }
                        else
                        {
                            <div class="text-center">
                                @foreach (var comment in postImage.Comments)
                                {
                                    <div class="comment-container d-flex align-items-center mb-3">
                                        <div class="comment-details">
                                            @if (comment.User.PictureProfile == null)
                                            {
                                                <h9 class="text-primary d-inline-block"><i class="bi bi-person-circle mx-2 text-primary"></i>@comment.User.Name.CutName()</h9>
                                                <p class="d-inline-block mx-2">@comment.Text.CutComment()</p>
                                            }
                                            else
                                            {
                                                <form asp-action="UserPageWithParams" asp-controller="User" method="get">
                                                    <input type="hidden" name="name" value="@Model.User.Name" />
                                                    <button class="btn text-dark"><img src="data:image/png;base64,@(Convert.ToBase64String(comment.User.PictureProfile))" class="img-fluid rounded-circle me-2" style="width: 40px; height: 40px; object-fit: cover;" /> @comment.User.Name.CutName():</button>
                                                    <p class="d-inline-block mx-2">@comment.Text.CutComment()</p>
                                                </form>
                                            }
                                        </div>
                                        <div class="comment-like ms-auto">
                                            @if (comment.Likes != null && comment.Likes.Count() != 0 && postImage.Likes.Any(l => l.User.Name == User.Identity.Name))
                                            {
                                                <form method="post" asp-action="DislikeComment" asp-route-id="@comment.Id" asp-controller="Post">
                                                    <button type="submit" class="btn btn-like"><i class="bi bi-heart-fill text-danger"></i> <span class="m-0 text-danger">@comment.Likes.CountLikes()</span></button>
                                                </form>
                                            }
                                            else
                                            {
                                                <form method="post" asp-action="LikeComment" asp-route-id="@comment.Id" asp-controller="Post">
                                                    <button type="submit" class="btn btn-like"><i class="bi bi-heart text-danger"></i> <span class="m-0 text-danger">@comment.Likes.CountLikes()</span></button>
                                                </form>
                                            }
                                        </div>
                                    </div>
                                    <hr />
                                }
                            </div>
                        }
                        <a class="btn btn-outline-primary text-xxl-center mb-3" asp-route-id="@postImage.Id" asp-action="CreateComment" asp-controller="Post"><i class="bi bi-chat-left text-primary"></i> Add Comment</a>
                    </div>
                    <form class="add-comment-form" style="display: none;">
                        <input type="text" class="form-control mb-3" placeholder="Add a comment..." />
                        <button type="submit" class="btn btn-primary">Add</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="text-center">
        <form method="post" asp-action="DeletePost" asp-controller="Post" asp-route-id="@Model.Id">
            <button class="btn btn-outline-danger text-danger">Delete Post <i class="bi bi-trash-fill"></i> </button>
        </form>
    </div>
}

<style>
    .post {
        border: 1px solid #FF4500;
        border-radius: 8px;
        padding: 20px;
        margin-bottom: 0px;
    }

    .post-header {
        display: flex;
        justify-content: space-between;
    }

    .btn-deep-dark {
        background-color: #1a1a1a;
        color: #ffffff;
        border: 1px solid #ffffff;
        border-radius: 4px;
        padding: 10px 20px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .custom-border {
        width: 100%;
        height: 2px;
        background: linear-gradient(to right, #FFA500, #FF4500);
        margin: 40px 0;
    }

    .info-text {
        background: linear-gradient(to right, #FFA500, #FF4500);
        -webkit-background-clip: text;
        color: transparent;
        padding: 10px 20px;
        margin-bottom: 20px;
    }

    .body {
        border: 1px solid #FF4500;
        border-radius: 8px;
        padding-top: 20px;
        padding-bottom: 20px;
        padding-left: 5px;
        padding-right: 5px;
        margin-bottom: 80px;
    }
</style>

@section Scripts {
    <script>
        document.querySelectorAll('.toggle-comments').forEach(btn => {
            btn.addEventListener('click', () => {
                const postId = btn.getAttribute('data-post-id');
                const comments = document.querySelector(`.post-comments[data-post-id="${postId}"]`);
                comments.style.display = comments.style.display === 'none' ? 'block' : 'none';
            });
        });

        document.querySelectorAll('.btn-like-comment').forEach(btn => {
            btn.addEventListener('click', (event) => {
                event.stopPropagation();
            });
        });
        document.getElementById('descriptionInput').addEventListener('keydown', function (event) {
            if (event.keyCode === 13 && !event.shiftKey) { // 13 is the keycode for Enter
                event.preventDefault(); // Prevent the default behavior (new line)
                document.getElementById('editForm').submit(); // Submit the form
            }
        });
    </script>
}



